package info.ascetx.stockstalker;

import junit.framework.TestCase;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.StringReader;
import java.text.SimpleDateFormat;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Deque;
import java.util.List;
import java.util.Locale;
import java.util.stream.Collectors;

/**
 * Created by JAYESH on 14-07-2018.
 */
public class MainActivityTest extends TestCase {

    int tzo, interval;
    Long uts;
    List<StockDaily> stockDaily;
    String formattedDate;
    int i;

    public void testPrint() throws Exception {
        System.out.println("Hello Java");
        googfResponse();
    }

    public void googfResponse() {

//        https://www.google.com/finance/getprices?q=MSFT&x=NASDAQ&i=60&p=1d

        String fgResponse = "EXCHANGE%3DNSE\n" +
                "MARKET_OPEN_MINUTE=555\n" +
                "MARKET_CLOSE_MINUTE=930\n" +
                "INTERVAL=60\n" +
                "COLUMNS=DATE,CLOSE,HIGH,LOW,OPEN,VOLUME\n" +
                "DATA=\n" +
                "TIMEZONE_OFFSET=330\n" +
                "a1531799160,2173.6,2175.45,2165,2165,20961\n" +
                "1,2173,2174.95,2172.3,2172.65,9827\n" +
                "2,2175,2175,2172.2,2172.8,9844\n" +
                "3,2173.2,2175,2173,2174.05,19609\n" +
                "4,2173.3,2174,2171.3,2172.95,12562\n" +
                "5,2174.45,2175,2173.25,2173.3,4378\n" +
                "6,2175.05,2175.5,2174.25,2174.85,4003\n" +
                "7,2174.85,2175.5,2174.75,2175.4,7231\n" +
                "8,2177.65,2177.65,2174.9,2174.9,3460\n" +
                "9,2175.9,2177.6,2175.7,2177.05,3551\n" +
                "10,2175.2,2176.6,2175,2176,5340\n" +
                "11,2175.25,2175.5,2174.25,2175.3,2012\n" +
                "12,2176,2176,2175.25,2175.5,1883\n" +
                "13,2175.65,2176,2175.5,2175.9,1584\n" +
                "14,2175.85,2176,2175.1,2175.7,907\n" +
                "15,2178.95,2178.95,2175.9,2176,4027\n" +
                "16,2177.45,2178.95,2177,2178.95,1895\n" +
                "17,2176.15,2178,2175.55,2177.55,3843\n" +
                "18,2175.5,2176.5,2174.95,2175.75,2077\n" +
                "19,2175.5,2176.65,2175.4,2175.4,2134\n" +
                "20,2176.5,2177,2175.6,2175.7,1847\n" +
                "21,2175.15,2176.5,2175.1,2176.45,2264\n" +
                "22,2173.8,2175.15,2173.65,2175.15,7838\n" +
                "23,2173.65,2173.8,2173.4,2173.8,1690\n" +
                "24,2172.65,2173.6,2172.65,2173.5,3861\n" +
                "25,2170.85,2172.8,2170.5,2172.65,3757\n" +
                "26,2171.7,2171.7,2170.85,2170.85,1724\n" +
                "27,2173.05,2173.2,2171.7,2171.7,2239\n" +
                "28,2171.3,2173.95,2171.3,2173.2,7481\n" +
                "29,2171.15,2171.35,2171,2171.35,3648\n" +
                "30,2171.1,2171.25,2171.1,2171.2,1335\n" +
                "31,2171.65,2172.15,2171.1,2171.1,1867\n" +
                "32,2173.25,2173.9,2171.75,2171.75,1570\n" +
                "33,2173.4,2173.7,2173.35,2173.35,1382\n" +
                "34,2174.1,2174.2,2173.55,2173.55,791\n" +
                "35,2173.85,2174.25,2173.85,2174.25,893\n" +
                "36,2173.85,2173.95,2173.8,2173.85,894\n" +
                "37,2174.55,2174.85,2173.5,2173.85,3134\n" +
                "38,2174.55,2174.55,2174.5,2174.55,2136\n" +
                "39,2172.35,2174.9,2172.2,2174.55,7524\n" +
                "40,2172.6,2172.6,2172,2172.2,7446\n" +
                "41,2172.15,2174,2172,2172.6,13446\n" +
                "42,2172.45,2173,2172,2172.25,1785\n" +
                "43,2174.15,2175,2173,2173,6906\n" +
                "44,2174.9,2176,2174.25,2176,9638\n" +
                "45,2173.25,2174.8,2173.25,2174.8,3356\n" +
                "46,2173.55,2174.45,2172.1,2173.25,5997\n" +
                "47,2173.4,2174.5,2173,2174.3,1353\n" +
                "48,2174.5,2174.5,2173.4,2173.4,1070\n" +
                "49,2174.6,2174.65,2174.4,2174.5,3161\n" +
                "50,2174,2174.95,2173.8,2174.65,1351\n" +
                "51,2173.9,2173.95,2173.75,2173.75,1004\n" +
                "52,2173.2,2174,2173.2,2173.9,928\n" +
                "53,2173.05,2173.5,2172.95,2173.2,888\n" +
                "54,2172.3,2173.05,2172.15,2173.05,682\n" +
                "55,2172.4,2172.9,2172.25,2172.3,1086\n" +
                "56,2174,2174,2172.4,2172.5,2816\n" +
                "57,2174.9,2175,2173.45,2173.85,1378\n" +
                "58,2174.6,2174.8,2173.95,2174.05,2003\n" +
                "59,2175,2175.5,2174.4,2174.4,1045\n" +
                "60,2174.6,2175.3,2174.35,2175.3,1020\n" +
                "61,2174.6,2174.6,2174.5,2174.55,1305\n" +
                "62,2175.8,2175.9,2174.55,2174.55,2380\n" +
                "63,2175.55,2176.75,2175.4,2175.8,3305\n" +
                "64,2176.5,2176.5,2175.65,2175.85,2027\n" +
                "65,2177.2,2177.65,2176.4,2176.5,6527\n" +
                "66,2176.7,2177.1,2176.5,2177.1,3512\n" +
                "67,2176.15,2176.7,2176.05,2176.7,1241\n" +
                "68,2175.55,2176.2,2175.5,2176.2,1131\n" +
                "69,2175.55,2175.6,2175,2175.6,1549\n" +
                "70,2175.45,2176,2175.2,2175.55,3805\n" +
                "71,2175.65,2176.5,2175.45,2175.45,1566\n" +
                "72,2175.5,2175.65,2175.4,2175.65,1010\n" +
                "73,2175.5,2175.7,2175.05,2175.45,1878\n" +
                "74,2176.05,2176.1,2175.55,2175.55,3340\n" +
                "75,2177.15,2177.9,2176.1,2176.3,3310\n" +
                "76,2178.15,2178.15,2177.2,2177.2,2678\n" +
                "77,2177.55,2178,2177.55,2177.95,964\n" +
                "78,2175.95,2177.7,2175.95,2177.7,4837\n" +
                "79,2176.05,2176.55,2175.95,2176,3810\n" +
                "80,2177.3,2177.55,2176.05,2176.05,6788\n" +
                "81,2175.65,2176.45,2175.65,2176.45,879\n" +
                "82,2175.35,2176.05,2175.25,2175.55,3642\n" +
                "83,2176,2177.2,2175.35,2175.35,8017\n" +
                "84,2175.55,2176.05,2175.5,2176.05,1067\n" +
                "85,2175.05,2176,2175,2175.55,3633\n" +
                "86,2174.8,2176,2174.75,2175.75,1121\n" +
                "87,2174.85,2174.9,2174.65,2174.75,1672\n" +
                "88,2175.75,2175.75,2174.8,2174.85,1741\n" +
                "89,2174.95,2175.7,2174.85,2175.7,733\n" +
                "90,2174.85,2176,2174.85,2174.95,2781\n" +
                "91,2174.85,2176,2174.8,2174.9,2044\n" +
                "92,2174.5,2174.85,2174.5,2174.85,2618\n" +
                "93,2174.35,2175.3,2174,2174.55,3453\n" +
                "94,2172.2,2174.35,2172.2,2174,10665\n" +
                "95,2172.75,2173.75,2172.05,2172.05,9057\n" +
                "96,2172.55,2173.1,2172.4,2172.65,1645\n" +
                "97,2173.65,2174,2172.85,2172.85,1573\n" +
                "98,2172.85,2173.85,2172.55,2173.55,2653\n" +
                "99,2172.5,2173,2172.5,2172.85,1559\n" +
                "100,2172.6,2173.75,2172.5,2172.5,1761\n" +
                "101,2172,2172.7,2172,2172.65,3057\n" +
                "102,2172.75,2173.1,2172,2172,2133\n" +
                "103,2172.05,2172.7,2171.1,2172.7,13659\n" +
                "104,2172,2172.8,2172,2172,3000\n" +
                "105,2171.8,2172.35,2171.05,2172.05,3136\n" +
                "106,2170.5,2172,2170.5,2171.5,2333\n" +
                "107,2169.25,2170.7,2169.25,2170.7,3445\n" +
                "108,2169.35,2169.4,2169.25,2169.4,763\n" +
                "109,2169.4,2169.7,2167.75,2169.3,6430\n" +
                "110,2168,2169,2167.8,2168.55,3873\n" +
                "111,2168,2168.8,2167.65,2167.9,3049\n" +
                "112,2166.7,2168.3,2166.2,2167.9,45343\n" +
                "113,2166.75,2167.15,2166,2166.2,2916\n" +
                "114,2167.4,2167.7,2166.5,2166.85,1349\n" +
                "115,2169.1,2169.7,2167.45,2167.45,2502\n" +
                "116,2169.8,2169.8,2169.2,2169.2,1262\n" +
                "117,2169.8,2170,2169.75,2170,965\n" +
                "118,2169.8,2169.8,2169.75,2169.8,787\n" +
                "119,2170.05,2170.2,2169.8,2169.85,2189\n" +
                "120,2170.5,2170.5,2170.2,2170.2,459\n" +
                "121,2172,2172,2170.5,2170.5,3780\n" +
                "122,2170.6,2172.1,2170.6,2171.7,3511\n" +
                "123,2170.35,2170.9,2170.3,2170.65,813\n" +
                "124,2171.5,2171.9,2170.85,2170.85,554\n" +
                "125,2171.85,2171.95,2171.65,2171.75,681\n" +
                "126,2171,2171.9,2171,2171.9,844\n" +
                "127,2170.85,2171.45,2170.8,2171.1,920\n" +
                "128,2169.85,2171,2169.8,2170.9,1411\n" +
                "129,2169.95,2170.15,2169.8,2169.85,1341\n" +
                "130,2170.4,2170.95,2169.35,2169.9,1638\n" +
                "131,2170.6,2170.95,2170.35,2170.55,1357\n" +
                "132,2171.35,2172,2171.1,2171.1,1067\n" +
                "133,2170.9,2171.7,2170.9,2171.45,860\n" +
                "134,2170.4,2170.95,2170.15,2170.95,1004\n" +
                "135,2170.1,2170.55,2170.1,2170.4,1153\n" +
                "136,2170.6,2170.7,2170.1,2170.15,757\n" +
                "137,2169.2,2170.35,2169.2,2170.2,2935\n" +
                "138,2170.2,2170.2,2169.2,2169.25,1031\n" +
                "139,2169.65,2170.9,2169.35,2169.8,1692\n" +
                "140,2170.9,2171.45,2169.65,2169.65,1576\n" +
                "141,2171.3,2171.95,2170.5,2171.05,1191\n" +
                "142,2171.05,2171.65,2171,2171.65,780\n" +
                "143,2170,2171.05,2170,2171.05,824\n" +
                "144,2169.8,2170.05,2169.05,2170.05,1235\n" +
                "145,2169.85,2170.45,2169.1,2169.85,1128\n" +
                "146,2169.55,2171.3,2169.5,2171.3,863\n" +
                "147,2169.1,2169.6,2169.05,2169.55,1632\n" +
                "148,2170.5,2171.05,2169.25,2169.3,1934\n" +
                "149,2169.4,2170.5,2169.15,2170.5,916\n" +
                "150,2170.35,2171.95,2169.2,2169.2,4997\n" +
                "151,2170.2,2171,2170.15,2170.35,1635\n" +
                "152,2170.25,2170.5,2170.2,2170.3,1331\n" +
                "153,2169.4,2170.3,2169.35,2170.3,832\n" +
                "154,2170.35,2170.35,2169.2,2169.4,1736\n" +
                "155,2170.6,2171.3,2170.15,2170.15,915\n" +
                "156,2170.6,2170.95,2170.25,2170.55,1851";
        stockDaily = new ArrayList();
        String line;
        i = 60;

        try (BufferedReader in = new BufferedReader(new StringReader(fgResponse)))
        {
            for (int i = 0; i<6; i++){
                in.readLine();
            }

            while ((line = in.readLine())!= null){
                if(line.contains("TIMEZONE_OFFSET=")){
//            		System.out.println(line.trim().substring(line.trim().length() - 4));
                    tzo = Integer.valueOf(line.trim().substring(line.trim().indexOf('=')+1));
                }
                else if(line.substring(0,1).equals("a")){
//            		COLUMNS=DATE,CLOSE,HIGH,LOW,OPEN,VOLUME
                    String[] x = line.trim().split(",");
                    uts = Long.valueOf(x[0].substring(1));
//            		System.out.println(uts+(tzo*60));
//                    java.util.Date time = new java.util.Date((uts+(tzo*60))*1000);
                    java.util.Date time = new java.util.Date(uts*1000);
//                    SimpleDateFormat sdf = new java.text.SimpleDateFormat("MMM dd, h:mm:ss", Locale.ENGLISH);
                    SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    if(tzo == 330)
                        sdf.setTimeZone(java.util.TimeZone.getTimeZone("IST"));
                    else
                        sdf.setTimeZone(java.util.TimeZone.getTimeZone("GMT"+String.valueOf(tzo/60)));
                    System.out.println("GMT"+String.valueOf(tzo/60));
                    formattedDate = sdf.format(time);
                    stockDaily.add(new StockDaily(x[1],x[2],x[3],x[4],formattedDate));
                } else {
                    String[] x = line.trim().split(",");
                    interval = Integer.valueOf(x[0]);
//                    java.util.Date time = new java.util.Date(((uts+(tzo*60))+(interval*i))*1000);
                    java.util.Date time = new java.util.Date((uts+(interval*i))*1000);
//                    SimpleDateFormat sdf = new java.text.SimpleDateFormat("MMM dd, h:mm:ss", Locale.ENGLISH);
                    SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    if(tzo == 330)
                        sdf.setTimeZone(java.util.TimeZone.getTimeZone("IST"));
                    else
                        sdf.setTimeZone(java.util.TimeZone.getTimeZone("GMT"+String.valueOf(tzo/60)));
                    formattedDate = sdf.format(time);
                    stockDaily.add(new StockDaily(x[1],x[2],x[3],x[4],formattedDate));
                }

            }
            for (StockDaily sd : stockDaily ){
                System.out.println(sd.getDate()+" "+sd.getLtp()+" "+sd.getPcls()+" "+sd.getChg()+" "+sd.getChg_p());
            }

            /*List<StockDetails> stockDetails = in .lines().skip(7).map(line -> {
                String[] x = line.split(",");
                return new StockDetails(x[0],x[1],x[2],x[3],x[4],x[5]);
            }).collect(Collectors.toList());
//            Gson gson = new Gson();
//            String json = gson.toJson(stockDetails);
//            System.out.println(json);

            Long uts = Long.valueOf(stockDetails.get(0).getDate().substring(1));
            java.util.Date time = new java.util.Date((uts+(39*600))*1000);
            // the format of your date
            SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss z");
            // give a timezone reference for formatting (see comment at the bottom)
                sdf.setTimeZone(java.util.TimeZone.getTimeZone("GMT-4"));
            String formattedDate = sdf.format(time);
            System.out.println(formattedDate);

            sdf.setTimeZone(java.util.TimeZone.getTimeZone("IST"));
            formattedDate = sdf.format(time);
            System.out.println(formattedDate);

            System.out.println(time);
            System.out.println(new java.util.Date(System.currentTimeMillis()));*/

        } catch (IOException e) {
            e.printStackTrace();
        }


    }
}